{"version":3,"file":"videoShow.cc0e8730.js","sources":["../../src/myViews/videoShow.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-frame\">\r\n        <div class=\"video-selector\">\r\n            <div v-for=\"item in videoList\" class=\"selector-item\" :class=\"item.active\">\r\n                <button  @click=\"selectVideo(item)\">\r\n                    <span>{{ item.name }}</span>\r\n                    <el-icon @click=\"deleteVideo(item)\"><Close/></el-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"selector-item\">\r\n                <button @click=\"dialogImageUrl = true\"><span><el-icon style=\"margin-top: 8px;\" size=\"samll\"><Plus></Plus></el-icon></span></button>\r\n            </div>\r\n            <!-- <el-button type=\"info\" @click=\"$event => {videoUrl= '' ;videoShow=false; return ;}\">清理</el-button> -->\r\n        </div>\r\n\r\n        <div class=\"img-container\">\r\n        \r\n        <el-dialog v-model=\"dialogImageUrl\">\r\n            <el-form>\r\n                <el-form-item label=\"视频流链接地址\">\r\n                    <el-input v-model=\"videoUrl\"></el-input>\r\n                </el-form-item>\r\n            <el-form-item label=\"是否开启反欺诈\">\r\n                <el-switch v-model=\"isOpenFAS\" />\r\n            </el-form-item>\r\n            <el-form-item >\r\n                <el-button type=\"primary\" @click=\"dialogImageUrl=false;addVideo();\" >确认</el-button>\r\n                <el-button type=\"danger\" @click=\"dialogImageUrl = false\" >取消</el-button>\r\n                <el-button type=\"success\" @click=\"dialogImageUrl = false; useLocalVideo();\" style=\"margin-left: 120px;\">采用本机摄像头</el-button>\r\n            </el-form-item>\r\n            </el-form>\r\n        </el-dialog >\r\n        <!-- <el-dialog v-model=\"openVar\" title=\"警告\" width=\"400px\" center>\r\n           \r\n            <el-icon color=\"red\"><warning/></el-icon>\r\n            <span> 欺诈识别已记录，请勿进行欺诈识别</span>\r\n        </el-dialog> -->\r\n            <img v-if=\"videoShow\" class=\"index-img\" :src=\"requestUrl\" alt=\"\">\r\n\r\n        <!-- <img v-else class=\"index-img\" src=\"../assets/images/loading.webp\" alt=\"\"> -->\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script lang=\"js\">\r\nimport { httpurl } from '../config'\r\nimport { Close,Plus } from '@element-plus/icons-vue'\r\n\r\nexport default{\r\n    name: 'videoShow',\r\n    data(){\r\n        return{\r\n            dialogImageUrl: false,\r\n            videoShow : false,\r\n            videoUrl:'',\r\n            actionUrl: httpurl+'/webvideo',\r\n            requestUrl: '',\r\n            isOpenFAS: true,\r\n            openVar: true,\r\n            videoList:[\r\n                // {\r\n                //     id: 1,\r\n                //     name: '视频流1',\r\n                //     videoUrl: '',\r\n                //     isOpenFAS: true,\r\n                //     active: '',\r\n                // }\r\n            ]\r\n                \r\n    }\r\n    },\r\n    components:{\r\n        Close,\r\n        Plus\r\n    },\r\n    created(){\r\n        this.dialogImageUrl = false;\r\n    },\r\n    methods:{\r\n        addVideo(){\r\n            if(this.videoUrl == ''){\r\n                this.$message({\r\n                    message: '视频流地址不能为空',\r\n                    type: 'warning'\r\n                })\r\n                return\r\n            }\r\n            var id =  this.videoList.length + 1\r\n            this.videoList.push({\r\n                id: id,\r\n                name: '视频流' + (this.videoList.length + 1),\r\n                videoUrl: this.videoUrl,\r\n                isOpenFAS: this.isOpenFAS,\r\n                active: ''\r\n            })\r\n            this.videoUrl = ''\r\n            this.isOpenFAS = true\r\n            this.selectVideo(this.videoList[id-1]);\r\n        \r\n        },\r\n        useLocalVideo(){\r\n            const ws = new WebSocket('ws://localhost:7888');\r\n            this.videoUrl = 'http://localhostvideo'\r\n            navigator.mediaDevices.getUserMedia({ video: true })\r\n                .then(stream => {\r\n                    // 将视频流传输到后台\r\n                    const mediaRecorder = new MediaRecorder(stream);\r\n                    mediaRecorder.ondataavailable = event => {\r\n                    ws.send(event.data);\r\n                    };\r\n                    mediaRecorder.start();\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n            // this.addVideo();\r\n        },\r\n        selectVideo(item){\r\n            this.videoList.forEach(element => {\r\n                element.active = ''\r\n            });\r\n            item.active = 'isactive';\r\n            this.openVideo(item);\r\n        },\r\n        openVideo(item){\r\n            var videoUrl = item.videoUrl\r\n            var isOpenFAS = item.isOpenFAS\r\n            this.videoShow = false\r\n            this.requestUrl = encodeURI(this.actionUrl + '?url=' + encodeURIComponent(videoUrl)) + '&' + 'isopenfas=' + isOpenFAS\r\n            console.log(this.requestUrl)\r\n            this.videoShow = true\r\n            this.dialogImageUrl = false\r\n            \r\n        },\r\n        \r\n        deleteVideo(item){\r\n            this.videoList.forEach(element => {\r\n               if(element.id == item.id){\r\n                   this.videoList.splice(element.id-1,1)\r\n               }\r\n            });\r\n            if(this.videoList.length === 0 || this.videoList == null || this.videoList == undefined){\r\n                this.videoShow = false;\r\n                this.requestUrl = '';\r\n            }else{\r\n                this.selectVideo(this.videoList[0])\r\n            }\r\n            this.$forceUpdate();\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n    .video-frame{\r\n        width: 100%;\r\n        height: 650px;\r\n        flex-direction: column;\r\n        margin-bottom: 50px;\r\n    }\r\n    .video-selector{\r\n        display: flex;\r\n        margin-top: 42px;\r\n    }\r\n    .video-selector .selector-item{\r\n        display: flex;\r\n        min-width: 35px;\r\n        max-width: 130px;\r\n        height: 30px;\r\n        margin-left: 0px;\r\n        margin-right: 2px;\r\n        border-radius: 8px 8px 0px 0px;\r\n        background-color: #c5def6;\r\n        transition: all 0.5s;\r\n    }\r\n    .video-selector .selector-item:hover{\r\n        background-color: white;\r\n    }\r\n    .video-selector .selector-item.isactive{\r\n        background-color: white;\r\n    }\r\n    .video-selector .selector-item button{\r\n        display: flex;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: none;\r\n    }\r\n    .video-selector .selector-item button span{\r\n        margin: auto;\r\n        margin-left: 20px;\r\n        margin-right: 15px;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        color: #2c3e50;\r\n    }\r\n    .video-selector .selector-item button .el-icon{\r\n        margin-top: 8px;\r\n        margin-right: 5px;\r\n    }\r\n    .img-container{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .index-img{\r\n\r\n        margin-top: 40px;\r\n        max-width: 1500px;\r\n        max-height: 580px;\r\n    }\r\n</style>"],"names":[],"mappings":"+cAiDA"}